openapi: 3.1.0
info:
  title: JuridicAI API
  version: 1.0.0
  description: |
    ## ‚öñÔ∏è Bem-vindo √† API JuridicAI

    JuridicAI √© uma plataforma multi-tenant projetada para gest√£o de escrit√≥rios de advocacia, oferecendo controle completo sobre clientes, processos, prazos, documentos e eventos processuais. Constru√≠da com AdonisJS v6, PostgreSQL e arquitetura moderna de isolamento por tenant.

    ### üéØ Principais Recursos

    - **Arquitetura Multi-tenant**: Isolamento completo de dados por escrit√≥rio
    - **Dom√≠nio Jur√≠dico Brasileiro**: Suporte a CPF, CNPJ, CNJ e tribunais brasileiros
    - **Gest√£o de Processos**: Controle completo do ciclo de vida processual
    - **Prazos Inteligentes**: Alertas configur√°veis e prazos fatais
    - **Documentos Avan√ßados**: OCR, assinatura digital e versionamento
    - **Controle de Acesso**: RBAC baseado em roles e permiss√µes

    ## üîê Autentica√ß√£o

    Todos os endpoints da API (exceto `/health`) requerem autentica√ß√£o JWT. Siga estes passos:

    1. **Login**: POST para `/api/v1/sessions/sign-in` com credenciais
    2. **Obter Token**: Extraia o `access_token` da resposta
    3. **Usar Token**: Inclua `Authorization: Bearer <token>` em todas as requisi√ß√µes

    ### Multi-tenant Context

    Recursos jur√≠dicos (clientes, casos, prazos, documentos) requerem contexto de tenant:

    - **Header**: `X-Tenant-ID: <uuid>`
    - **Resolu√ß√£o**: Via header, subdom√≠nio ou tenant padr√£o do usu√°rio
    - **Isolamento**: Queries autom√°ticas filtradas por tenant_id

    ## üìã Conven√ß√µes da API

    ### Formato de Requisi√ß√£o
    - **Content-Type**: `application/json`
    - **Pagina√ß√£o**: `?page=1&per_page=20`
    - **Busca**: `?search=termo`
    - **Filtros**: Query params espec√≠ficos por recurso

    ### Formato de Resposta
    - **Sucesso**: HTTP 2xx com JSON
    - **Erros**: HTTP 4xx/5xx com detalhes
    - **Timestamps**: ISO 8601 (UTC)
    - **IDs**: N√∫meros auto-incrementais (exceto tenant_id que √© UUID)

    ### Headers Comuns
    ```
    Authorization: Bearer <token>
    X-Tenant-ID: <uuid>
    Content-Type: application/json
    Accept-Language: pt-BR
    ```

  x-logo:
    url: https://raw.githubusercontent.com/adonisjs/art/master/adonisjs.svg
    altText: JuridicAI Logo

  contact:
    name: Gabriel Maia
    email: gabriel.maia@juridicai.com.br
    url: https://github.com/gabrielmaia

  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3333
    description: Servidor de desenvolvimento local
  - url: https://staging-api.juridicai.com.br
    description: Ambiente de staging/testes
  - url: https://api.juridicai.com.br
    description: Servidor de produ√ß√£o

x-tagGroups:
  - name: üè• Sa√∫de do Sistema
    tags:
      - Health
  - name: üîê Autentica√ß√£o & Acesso
    tags:
      - Authentication
      - Profile
  - name: üë• Gest√£o de Usu√°rios
    tags:
      - Tenants
      - Users
  - name: ‚öñÔ∏è Gest√£o Jur√≠dica - Clientes
    tags:
      - Clients
  - name: ‚öñÔ∏è Gest√£o Jur√≠dica - Processos
    tags:
      - Cases
  - name: ‚öñÔ∏è Gest√£o Jur√≠dica - Prazos
    tags:
      - Deadlines
  - name: ‚öñÔ∏è Gest√£o Jur√≠dica - Documentos
    tags:
      - Documents
  - name: ‚öñÔ∏è Gest√£o Jur√≠dica - Eventos
    tags:
      - Case Events
  - name: üåê APIs Externas
    tags:
      - External APIs
tags:
  - name: Health
    description: Verifica√ß√£o de sa√∫de do sistema
  - name: Authentication
    description: Autentica√ß√£o e gerenciamento de sess√µes
  - name: Profile
    description: Perfil e informa√ß√µes do usu√°rio autenticado
  - name: Tenants
    description: Gerenciamento de tenants (escrit√≥rios/organiza√ß√µes)
  - name: Users
    description: Gerenciamento de usu√°rios do sistema
  - name: Clients
    description: Gerenciamento de clientes (pessoas f√≠sicas e jur√≠dicas)
  - name: Cases
    description: Gerenciamento de processos judiciais
  - name: Deadlines
    description: Gerenciamento de prazos processuais
  - name: Documents
    description: Gerenciamento de documentos e arquivos processuais
  - name: Case Events
    description: Gerenciamento de eventos e movimenta√ß√µes processuais
  - name: External APIs
    description: Integra√ß√£o com APIs externas

paths:
  /api/v1/health:
    get:
      operationId: healthCheck
      tags:
        - Health
      summary: Verifica√ß√£o de sa√∫de
      description: |
        Endpoint simples para verificar se a API est√° funcionando.

        **Sem autentica√ß√£o requerida**

        √ötil para:
        - Health checks de load balancers
        - Monitoramento de uptime
        - Testes de conectividade
      responses:
        '200':
          description: API est√° saud√°vel
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  timestamp:
                    type: string
                    format: date-time
                    example: '2025-01-20T10:00:00Z'
              example:
                status: ok
                timestamp: '2025-01-20T10:00:00Z'

  /api/v1/sessions/sign-in:
    post:
      operationId: signIn
      tags:
        - Authentication
      summary: Fazer login
      description: |
        Autentica um usu√°rio e retorna um token JWT de acesso.

        **Credenciais aceitas:**
        - Email ou username no campo `uid`
        - Senha no campo `password`

        **Resposta inclui:**
        - Token de acesso (v√°lido por 24h)
        - Informa√ß√µes do usu√°rio
        - Tenants dispon√≠veis
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - uid
                - password
              properties:
                uid:
                  type: string
                  description: Email ou username
                  example: advogado@escritorio.com.br
                password:
                  type: string
                  format: password
                  description: Senha do usu√°rio
                  example: senha123
            example:
              uid: advogado@escritorio.com.br
              password: senha123
      responses:
        '200':
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: Token JWT de acesso
                  token_type:
                    type: string
                    example: Bearer
                  expires_in:
                    type: integer
                    description: Tempo de expira√ß√£o em segundos
                    example: 86400
                  user:
                    $ref: '#/components/schemas/User'
              example:
                access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                token_type: Bearer
                expires_in: 86400
                user:
                  id: 1
                  full_name: Dr. Jo√£o Silva
                  email: advogado@escritorio.com.br
                  username: joao.silva
                  created_at: '2025-01-01T00:00:00Z'
        '401':
          description: Credenciais inv√°lidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/sessions/sign-up:
    post:
      operationId: signUp
      tags:
        - Authentication
      summary: Criar nova conta
      description: |
        Cria uma nova conta de usu√°rio no sistema.

        **Campos obrigat√≥rios:**
        - Nome completo
        - Email (√∫nico)
        - Senha (m√≠nimo 6 caracteres)
        - Confirma√ß√£o de senha

        **Campos opcionais:**
        - Username (√∫nico)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - full_name
                - email
                - password
                - password_confirmation
              properties:
                full_name:
                  type: string
                  minLength: 3
                  example: Dr. Jo√£o Silva
                email:
                  type: string
                  format: email
                  example: advogado@escritorio.com.br
                username:
                  type: string
                  minLength: 3
                  example: joao.silva
                password:
                  type: string
                  format: password
                  minLength: 6
                  example: senha123
                password_confirmation:
                  type: string
                  format: password
                  example: senha123
      responses:
        '201':
          description: Conta criada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '422':
          description: Erro de valida√ß√£o
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/me:
    get:
      operationId: getProfile
      tags:
        - Profile
      summary: Obter perfil do usu√°rio autenticado
      description: Retorna informa√ß√µes do perfil do usu√°rio autenticado
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Perfil do usu√°rio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /api/v1/me/permissions:
    get:
      operationId: getMyPermissions
      tags:
        - Profile
      summary: Obter permiss√µes do usu√°rio
      description: Lista todas as permiss√µes do usu√°rio autenticado
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de permiss√µes
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
                - clients.create
                - clients.read
                - cases.create
                - cases.read

  /api/v1/me/roles:
    get:
      operationId: getMyRoles
      tags:
        - Profile
      summary: Obter roles do usu√°rio
      description: Lista todos os roles do usu√°rio autenticado
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de roles
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
                - lawyer
                - admin

  /api/v1/tenants:
    get:
      operationId: listTenants
      tags:
        - Tenants
      summary: Listar tenants
      description: |
        Lista todos os tenants aos quais o usu√°rio tem acesso.

        **Sem tenant scope** - Este endpoint lista os pr√≥prios tenants.
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - name: search
          in: query
          description: Buscar por nome ou subdom√≠nio
          schema:
            type: string
        - name: plan
          in: query
          description: Filtrar por plano
          schema:
            type: string
            enum: [free, starter, pro, enterprise]
        - name: is_active
          in: query
          description: Filtrar por status
          schema:
            type: boolean
      responses:
        '200':
          description: Lista de tenants
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationMeta'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Tenant'

    post:
      operationId: createTenant
      tags:
        - Tenants
      summary: Criar tenant
      description: Cria um novo tenant (escrit√≥rio/organiza√ß√£o)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTenantRequest'
      responses:
        '201':
          description: Tenant criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'

  /api/v1/tenants/me:
    get:
      operationId: getCurrentTenant
      tags:
        - Tenants
      summary: Obter tenant atual
      description: |
        Retorna informa√ß√µes do tenant atual baseado no contexto.

        **Requer header X-Tenant-ID**
      security:
        - bearerAuth: []
        - tenantContext: []
      responses:
        '200':
          description: Tenant atual
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'

  /api/v1/tenants/{id}:
    get:
      operationId: getTenant
      tags:
        - Tenants
      summary: Obter tenant por ID
      description: Retorna detalhes de um tenant espec√≠fico
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: UUID do tenant
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Detalhes do tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '404':
          $ref: '#/components/responses/NotFound'

    patch:
      operationId: updateTenant
      tags:
        - Tenants
      summary: Atualizar tenant
      description: Atualiza informa√ß√µes de um tenant
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTenantRequest'
      responses:
        '200':
          description: Tenant atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'

    delete:
      operationId: deleteTenant
      tags:
        - Tenants
      summary: Deletar tenant
      description: Remove um tenant do sistema
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Tenant deletado com sucesso

  /api/v1/clients:
    get:
      operationId: listClients
      tags:
        - Clients
      summary: Listar clientes
      description: |
        Lista clientes do tenant atual com suporte a pagina√ß√£o e filtros.

        **Tenant-scoped**: Retorna apenas clientes do tenant especificado.
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - name: search
          in: query
          description: Buscar por nome, email ou documento (CPF/CNPJ)
          schema:
            type: string
        - name: client_type
          in: query
          description: Filtrar por tipo de cliente
          schema:
            type: string
            enum: [individual, company]
        - name: is_active
          in: query
          description: Filtrar por status
          schema:
            type: boolean
        - name: state
          in: query
          description: Filtrar por estado (UF)
          schema:
            type: string
            pattern: '^[A-Z]{2}$'
            example: SP
        - name: city
          in: query
          description: Filtrar por cidade
          schema:
            type: string
      responses:
        '200':
          description: Lista de clientes
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationMeta'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Client'

    post:
      operationId: createClient
      tags:
        - Clients
      summary: Criar cliente
      description: |
        Cria um novo cliente (pessoa f√≠sica ou jur√≠dica).

        **Valida√ß√µes brasileiras:**
        - CPF: formato XXX.XXX.XXX-XX
        - CNPJ: formato XX.XXX.XXX/XXXX-XX
        - CEP: formato XXXXX-XXX
      security:
        - bearerAuth: []
        - tenantContext: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClientRequest'
            examples:
              individual:
                summary: Pessoa F√≠sica
                value:
                  client_type: individual
                  full_name: Jo√£o da Silva
                  cpf: '123.456.789-09'
                  email: joao@email.com
                  phone: (11) 98765-4321
                  address:
                    street: Av. Paulista
                    number: '1000'
                    city: S√£o Paulo
                    state: SP
                    zip_code: 01310-100
              company:
                summary: Pessoa Jur√≠dica
                value:
                  client_type: company
                  company_name: Empresa LTDA
                  cnpj: '12.345.678/0001-90'
                  email: contato@empresa.com.br
                  phone: (11) 3000-0000
                  address:
                    street: Rua Augusta
                    number: '500'
                    city: S√£o Paulo
                    state: SP
                    zip_code: 01305-000
      responses:
        '201':
          description: Cliente criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '422':
          $ref: '#/components/responses/ValidationError'

  /api/v1/clients/{id}:
    get:
      operationId: getClient
      tags:
        - Clients
      summary: Obter cliente por ID
      description: Retorna detalhes de um cliente espec√≠fico
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - $ref: '#/components/parameters/ClientId'
      responses:
        '200':
          description: Detalhes do cliente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '404':
          $ref: '#/components/responses/NotFound'

    patch:
      operationId: updateClient
      tags:
        - Clients
      summary: Atualizar cliente
      description: Atualiza informa√ß√µes de um cliente
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - $ref: '#/components/parameters/ClientId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClientRequest'
      responses:
        '200':
          description: Cliente atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'

    delete:
      operationId: deleteClient
      tags:
        - Clients
      summary: Desativar cliente
      description: |
        Desativa um cliente (soft delete via is_active=false).

        **Nota**: Clientes n√£o s√£o deletados fisicamente.
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - $ref: '#/components/parameters/ClientId'
      responses:
        '204':
          description: Cliente desativado com sucesso

  /api/v1/cases:
    get:
      operationId: listCases
      tags:
        - Cases
      summary: Listar processos
      description: |
        Lista processos do tenant atual.

        **Tenant-scoped**: Retorna apenas processos do tenant.
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - name: search
          in: query
          description: Buscar por n√∫mero CNJ ou descri√ß√£o
          schema:
            type: string
        - name: client_id
          in: query
          description: Filtrar por cliente
          schema:
            type: integer
        - name: status
          in: query
          description: Filtrar por status
          schema:
            type: string
            enum: [active, closed, archived, suspended]
        - name: priority
          in: query
          description: Filtrar por prioridade
          schema:
            type: string
            enum: [low, medium, high, urgent]
        - name: case_type
          in: query
          description: Filtrar por tipo de processo
          schema:
            type: string
            enum: [civil, criminal, labor, family, tax, administrative, other]
        - name: responsible_lawyer_id
          in: query
          description: Filtrar por advogado respons√°vel
          schema:
            type: integer
      responses:
        '200':
          description: Lista de processos
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationMeta'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Case'

    post:
      operationId: createCase
      tags:
        - Cases
      summary: Criar processo
      description: |
        Cria um novo processo judicial.

        **N√∫mero CNJ** (opcional):
        - Formato: NNNNNNN-DD.AAAA.J.TR.OOOO
        - Exemplo: 0000001-23.2024.8.26.0100
      security:
        - bearerAuth: []
        - tenantContext: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCaseRequest'
            example:
              client_id: 1
              case_number: 0000001-23.2024.8.26.0100
              case_type: civil
              court: TJ-SP
              status: active
              priority: high
              responsible_lawyer_id: 1
              parties:
                autor:
                  name: Jo√£o Silva
                  cpf: '123.456.789-09'
                reu:
                  name: Empresa XYZ LTDA
                  cnpj: '12.345.678/0001-90'
              description: A√ß√£o de cobran√ßa
      responses:
        '201':
          description: Processo criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'

  /api/v1/cases/{id}:
    get:
      operationId: getCase
      tags:
        - Cases
      summary: Obter processo por ID
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - $ref: '#/components/parameters/CaseId'
      responses:
        '200':
          description: Detalhes do processo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'

    patch:
      operationId: updateCase
      tags:
        - Cases
      summary: Atualizar processo
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - $ref: '#/components/parameters/CaseId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCaseRequest'
      responses:
        '200':
          description: Processo atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'

    delete:
      operationId: deleteCase
      tags:
        - Cases
      summary: Arquivar processo
      description: Arquiva um processo (muda status para 'archived')
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - $ref: '#/components/parameters/CaseId'
      responses:
        '204':
          description: Processo arquivado

  /api/v1/deadlines:
    get:
      operationId: listDeadlines
      tags:
        - Deadlines
      summary: Listar prazos
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, completed, expired, cancelled]
        - name: is_fatal
          in: query
          schema:
            type: boolean
        - name: case_id
          in: query
          schema:
            type: integer
        - name: responsible_id
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Lista de prazos
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationMeta'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Deadline'

    post:
      operationId: createDeadline
      tags:
        - Deadlines
      summary: Criar prazo
      security:
        - bearerAuth: []
        - tenantContext: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeadlineRequest'
      responses:
        '201':
          description: Prazo criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deadline'

  /api/v1/deadlines/upcoming:
    get:
      operationId: getUpcomingDeadlines
      tags:
        - Deadlines
      summary: Listar prazos pr√≥ximos
      description: Retorna prazos pendentes dentro dos pr√≥ximos N dias (padr√£o 7)
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - name: days
          in: query
          description: N√∫mero de dias √† frente
          schema:
            type: integer
            default: 7
            minimum: 1
            maximum: 90
      responses:
        '200':
          description: Prazos pr√≥ximos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deadline'

  /api/v1/deadlines/{id}:
    get:
      operationId: getDeadline
      tags:
        - Deadlines
      summary: Obter prazo por ID
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - $ref: '#/components/parameters/DeadlineId'
      responses:
        '200':
          description: Detalhes do prazo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deadline'

    patch:
      operationId: updateDeadline
      tags:
        - Deadlines
      summary: Atualizar prazo
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - $ref: '#/components/parameters/DeadlineId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeadlineRequest'
      responses:
        '200':
          description: Prazo atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deadline'

    delete:
      operationId: deleteDeadline
      tags:
        - Deadlines
      summary: Cancelar prazo
      description: Cancela um prazo (status='cancelled')
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - $ref: '#/components/parameters/DeadlineId'
      responses:
        '204':
          description: Prazo cancelado

  /api/v1/deadlines/{id}/complete:
    patch:
      operationId: completeDeadline
      tags:
        - Deadlines
      summary: Marcar prazo como cumprido
      description: Marca um prazo como completo e registra informa√ß√µes de conclus√£o
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - $ref: '#/components/parameters/DeadlineId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                completion_notes:
                  type: string
                  description: Observa√ß√µes sobre o cumprimento
                  maxLength: 1000
              example:
                completion_notes: Prazo cumprido via peti√ß√£o protocolada
      responses:
        '200':
          description: Prazo marcado como completo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deadline'

  /api/v1/documents:
    get:
      operationId: listDocuments
      tags:
        - Documents
      summary: Listar documentos
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - name: case_id
          in: query
          schema:
            type: integer
        - name: client_id
          in: query
          schema:
            type: integer
        - name: document_type
          in: query
          schema:
            type: string
            enum:
              [
                petition,
                contract,
                evidence,
                judgment,
                appeal,
                power_of_attorney,
                agreement,
                report,
                other,
              ]
        - name: is_signed
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Lista de documentos
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationMeta'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Document'

    post:
      operationId: createDocument
      tags:
        - Documents
      summary: Upload de documento
      description: Faz upload de um novo documento
      security:
        - bearerAuth: []
        - tenantContext: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - title
                - document_type
              properties:
                file:
                  type: string
                  format: binary
                title:
                  type: string
                description:
                  type: string
                document_type:
                  type: string
                  enum:
                    [
                      petition,
                      contract,
                      evidence,
                      judgment,
                      appeal,
                      power_of_attorney,
                      agreement,
                      report,
                      other,
                    ]
                case_id:
                  type: integer
                client_id:
                  type: integer
                access_level:
                  type: string
                  enum: [tenant, case_team, owner_only]
                  default: tenant
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Document uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'

  /api/v1/documents/{id}:
    get:
      operationId: getDocument
      tags:
        - Documents
      summary: Obter documento por ID
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - $ref: '#/components/parameters/DocumentId'
      responses:
        '200':
          description: Detalhes do documento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'

    patch:
      operationId: updateDocument
      tags:
        - Documents
      summary: Atualizar metadados do documento
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - $ref: '#/components/parameters/DocumentId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentRequest'
      responses:
        '200':
          description: Documento atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'

    delete:
      operationId: deleteDocument
      tags:
        - Documents
      summary: Deletar documento
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - $ref: '#/components/parameters/DocumentId'
      responses:
        '204':
          description: Documento deletado

  /api/v1/documents/{id}/download:
    get:
      operationId: downloadDocument
      tags:
        - Documents
      summary: Download de documento
      description: Faz download do arquivo do documento
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - $ref: '#/components/parameters/DocumentId'
      responses:
        '200':
          description: Arquivo do documento
          content:
            application/pdf:
              schema:
                type: string
                format: binary
            application/octet-stream:
              schema:
                type: string
                format: binary

  /api/v1/case-events:
    get:
      operationId: listCaseEvents
      tags:
        - Case Events
      summary: Listar eventos processuais
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - name: case_id
          in: query
          required: false
          schema:
            type: integer
        - name: event_type
          in: query
          schema:
            type: string
            enum:
              [filing, hearing, decision, publication, appeal, motion, settlement, judgment, other]
        - name: source
          in: query
          schema:
            type: string
            enum: [manual, court_api, email, import]
      responses:
        '200':
          description: Lista de eventos
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationMeta'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/CaseEvent'

    post:
      operationId: createCaseEvent
      tags:
        - Case Events
      summary: Criar evento processual
      security:
        - bearerAuth: []
        - tenantContext: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCaseEventRequest'
      responses:
        '201':
          description: Evento criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseEvent'

  /api/v1/case-events/{id}:
    get:
      operationId: getCaseEvent
      tags:
        - Case Events
      summary: Obter evento por ID
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes do evento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseEvent'

    patch:
      operationId: updateCaseEvent
      tags:
        - Case Events
      summary: Atualizar evento
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCaseEventRequest'
      responses:
        '200':
          description: Evento atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseEvent'

    delete:
      operationId: deleteCaseEvent
      tags:
        - Case Events
      summary: Deletar evento
      security:
        - bearerAuth: []
        - tenantContext: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Evento deletado

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Token JWT obtido via `/api/v1/sessions/sign-in`

    tenantContext:
      type: apiKey
      in: header
      name: X-Tenant-ID
      description: |
        UUID do tenant para contexto multi-tenant.

        Obrigat√≥rio para recursos tenant-scoped (clientes, casos, prazos, documentos, eventos).

  parameters:
    Page:
      name: page
      in: query
      description: N√∫mero da p√°gina (come√ßa em 1)
      schema:
        type: integer
        minimum: 1
        default: 1

    PerPage:
      name: per_page
      in: query
      description: Itens por p√°gina
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20

    ClientId:
      name: id
      in: path
      required: true
      description: ID do cliente
      schema:
        type: integer

    CaseId:
      name: id
      in: path
      required: true
      description: ID do processo
      schema:
        type: integer

    DeadlineId:
      name: id
      in: path
      required: true
      description: ID do prazo
      schema:
        type: integer

    DocumentId:
      name: id
      in: path
      required: true
      description: ID do documento
      schema:
        type: integer

  responses:
    NotFound:
      description: Recurso n√£o encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error:
              code: NOT_FOUND
              message: Recurso n√£o encontrado

    ValidationError:
      description: Erro de valida√ß√£o
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error:
              code: VALIDATION_ERROR
              message: Erro de valida√ß√£o
              details:
                - field: email
                  message: Email inv√°lido

  schemas:
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        full_name:
          type: string
          example: Dr. Jo√£o Silva
        email:
          type: string
          format: email
          example: advogado@escritorio.com.br
        username:
          type: [string, "null"]
          example: joao.silva
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Tenant:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          example: Escrit√≥rio Silva & Associados
        subdomain:
          type: string
          example: silva-associados
        custom_domain:
          type: [string, "null"]
          example: advocacia.silva.com.br
        plan:
          type: string
          enum: [free, starter, pro, enterprise]
          example: pro
        is_active:
          type: boolean
          example: true
        limits:
          type: [object, "null"]
          properties:
            max_users:
              type: integer
            max_cases:
              type: integer
            max_storage_gb:
              type: integer
        trial_ends_at:
          type: ["string", "null"]
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Client:
      type: object
      properties:
        id:
          type: integer
          example: 1
        tenant_id:
          type: string
          format: uuid
        client_type:
          type: string
          enum: [individual, company]
          example: individual
        full_name:
          type: [string, "null"]
          example: Jo√£o da Silva
        cpf:
          type: [string, "null"]
          example: 123.456.789-09
        company_name:
          type: [string, "null"]
        cnpj:
          type: [string, "null"]
        email:
          type: [string, "null"]
          format: email
          example: joao@email.com
        phone:
          type: [string, "null"]
          example: (11) 98765-4321
        tags:
          type: [array, "null"]
          items:
            type: string
        custom_fields:
          type: [object, "null"]
        notes:
          type: [string, "null"]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Case:
      type: object
      properties:
        id:
          type: integer
          example: 1
        tenant_id:
          type: string
          format: uuid
        client_id:
          type: integer
          example: 1
        case_number:
          type: [string, "null"]
          description: N√∫mero CNJ
          example: 0000001-23.2024.8.26.0100
        internal_number:
          type: [string, "null"]
        case_type:
          type: string
          enum: [civil, criminal, labor, family, tax, administrative, other]
          example: civil
        court:
          type: [string, "null"]
          example: TJ-SP
        court_instance:
          type: [string, "null"]
          example: 1¬™ Inst√¢ncia
        status:
          type: string
          enum: [active, closed, archived, suspended]
          example: active
        priority:
          type: string
          enum: [low, medium, high, urgent]
          example: high
        responsible_lawyer_id:
          type: integer
          example: 1
        team_members:
          type: [array, "null"]
          items:
            type: integer
        filed_at:
          type: ["string", "null"]
          format: date-time
        closed_at:
          type: ["string", "null"]
          format: date-time
        tags:
          type: [array, "null"]
          items:
            type: string
        case_value:
          type: ["number", "null"]
          format: decimal
          example: 50000.00
        custom_fields:
          type: [object, "null"]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Deadline:
      type: object
      properties:
        id:
          type: integer
          example: 1
        tenant_id:
          type: string
          format: uuid
        case_id:
          type: integer
          example: 1
        responsible_id:
          type: integer
          example: 1
        title:
          type: string
          example: Apresentar contesta√ß√£o
        description:
          type: [string, "null"]
        deadline_date:
          type: string
          format: date-time
          example: '2025-02-15T23:59:59Z'
        internal_deadline_date:
          type: ["string", "null"]
          format: date-time
        is_fatal:
          type: boolean
          example: true
        status:
          type: string
          enum: [pending, completed, expired, cancelled]
          example: pending
        alert_config:
          type: [object, "null"]
          properties:
            days_before:
              type: array
              items:
                type: integer
              example: [7, 3, 1]
            email_enabled:
              type: boolean
            sms_enabled:
              type: boolean
            recipients:
              type: array
              items:
                type: integer
        completed_at:
          type: ["string", "null"]
          format: date-time
        completed_by:
          type: ["integer", "null"]
        completion_notes:
          type: ["string", "null"]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Document:
      type: object
      properties:
        id:
          type: integer
          example: 1
        tenant_id:
          type: string
          format: uuid
        case_id:
          type: ["integer", "null"]
        client_id:
          type: ["integer", "null"]
        uploaded_by:
          type: integer
          example: 1
        title:
          type: string
          example: Peti√ß√£o Inicial
        description:
          type: [string, "null"]
        document_type:
          type: string
          enum:
            [
              petition,
              contract,
              evidence,
              judgment,
              appeal,
              power_of_attorney,
              agreement,
              report,
              other,
            ]
          example: petition
        file_path:
          type: string
          example: documents/2025/01/petition_123.pdf
        file_size:
          type: integer
          example: 1024567
        mime_type:
          type: string
          example: application/pdf
        original_filename:
          type: string
          example: peticao_inicial.pdf
        storage_provider:
          type: string
          enum: [local, s3, gcs]
          example: local
        ocr_text:
          type: [string, "null"]
        is_ocr_processed:
          type: boolean
          example: false
        is_signed:
          type: boolean
          example: false
        signature_data:
          type: [object, "null"]
        access_level:
          type: string
          enum: [tenant, case_team, owner_only]
          example: tenant
        tags:
          type: [array, "null"]
          items:
            type: string
        version:
          type: integer
          example: 1
        parent_document_id:
          type: ["integer", "null"]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CaseEvent:
      type: object
      properties:
        id:
          type: integer
          example: 1
        tenant_id:
          type: string
          format: uuid
        case_id:
          type: integer
          example: 1
        event_type:
          type: string
          enum:
            [filing, hearing, decision, publication, appeal, motion, settlement, judgment, other]
          example: hearing
        title:
          type: string
          example: Audi√™ncia de Concilia√ß√£o
        description:
          type: [string, "null"]
        event_date:
          type: string
          format: date-time
          example: '2025-03-10T14:00:00Z'
        source:
          type: string
          enum: [manual, court_api, email, import]
          example: manual
        metadata:
          type: [object, "null"]
        created_by:
          type: ["integer", "null"]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Address:
      type: [object, "null"]
      properties:
        street:
          type: string
          example: Av. Paulista
        number:
          type: string
          example: '1000'
        complement:
          type: [string, "null"]
          example: Sala 101
        neighborhood:
          type: string
          example: Bela Vista
        city:
          type: string
          example: S√£o Paulo
        state:
          type: string
          pattern: '^[A-Z]{2}$'
          example: SP
        zip_code:
          type: string
          pattern: '^\d{5}-\d{3}$'
          example: 01310-100
        country:
          type: string
          example: Brasil

    Parties:
      type: [object, "null"]
      properties:
            cpf:
              type: [string, "null"]
            phone:
              type: [string, "null"]
        reu:
          type: object
          properties:
            name:
              type: string
            cpf:
              type: [string, "null"]
            cnpj:
              type: [string, "null"]
            email:
              type: [string, "null"]
            phone:
              type: [string, "null"]
        outros:
          type: array
          items:
            type: object
            properties:
              tipo:
                type: string
              name:
                type: string
              cpf:
                type: [string, "null"]
              cnpj:
                type: [string, "null"]

    PaginationMeta:
      type: object
      properties:
        meta:
          type: object
          properties:
            total:
              type: integer
              example: 100

  /api/v1/external/datajud/search:
    post:
      operationId: searchDatajud
      tags:
        - External APIs
      summary: Consultar processo no Datajud
      description: |
        Consulta um processo na API p√∫blica do Datajud (CNJ).

        **API Externa**: Este endpoint √© um proxy para a API do Datajud.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatajudSearchRequest'
      responses:
        '200':
          description: Processo encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatajudSearchResponse'
        '404':
          description: Processo n√£o encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            per_page:
              type: integer
              example: 20
            current_page:
              type: integer
              example: 1
            last_page:
              type: integer
              example: 5
            first_page:
              type: integer
              example: 1
            first_page_url:
              type: string
              example: '/?page=1'
            last_page_url:
              type: string
              example: '/?page=5'
            next_page_url:
              type: string
              nullable: true
              example: '/?page=2'
            previous_page_url:
              type: string
              nullable: true

    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              example: VALIDATION_ERROR
            message:
              type: string
              example: Erro de valida√ß√£o
            details:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                  message:
                    type: string

    CreateTenantRequest:
      type: object
      required:
        - name
        - subdomain
      properties:
        name:
          type: string
          example: Escrit√≥rio Silva & Associados
        subdomain:
          type: string
          example: silva-associados
        custom_domain:
          type: string
          nullable: true
        plan:
          type: string
          enum: [free, starter, pro, enterprise]
          default: free

    UpdateTenantRequest:
      type: object
      properties:
        name:
          type: string
        custom_domain:
          type: string
          nullable: true
        plan:
          type: string
          enum: [free, starter, pro, enterprise]
        is_active:
          type: boolean
        limits:
          type: object

    CreateClientRequest:
      type: object
      required:
        - client_type
      properties:
        client_type:
          type: string
          enum: [individual, company]
        full_name:
          type: string
        cpf:
          type: string
          pattern: '^\d{3}\.\d{3}\.\d{3}-\d{2}$'
        company_name:
          type: string
        cnpj:
          type: string
          pattern: '^\d{2}\.\d{3}\.\d{3}/\d{4}-\d{2}$'
        email:
          type: string
          format: email
        phone:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        tags:
          type: array
          items:
            type: string
        custom_fields:
          type: object
        notes:
          type: string

    UpdateClientRequest:
      type: object
      properties:
        client_type:
          type: string
          enum: [individual, company]
        full_name:
          type: string
        cpf:
          type: string
        company_name:
          type: string
        cnpj:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        tags:
          type: array
          items:
            type: string
        is_active:
          type: boolean
        custom_fields:
          type: object
        notes:
          type: string

    CreateCaseRequest:
      type: object
      required:
        - client_id
        - responsible_lawyer_id
      properties:
        client_id:
          type: integer
        case_number:
          type: string
          pattern: '^\d{7}-\d{2}\.\d{4}\.\d{1}\.\d{2}\.\d{4}$'
        internal_number:
          type: string
        case_type:
          type: string
          enum: [civil, criminal, labor, family, tax, administrative, other]
        court:
          type: string
        court_instance:
          type: string
        status:
          type: string
          enum: [active, closed, archived, suspended]
          default: active
        priority:
          type: string
          enum: [low, medium, high, urgent]
          default: medium
        responsible_lawyer_id:
          type: integer
        team_members:
          type: array
          items:
            type: integer
        filed_at:
          type: string
          format: date-time
        parties:
          $ref: '#/components/schemas/Parties'
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        case_value:
          type: number
          format: decimal
        custom_fields:
          type: object

    UpdateCaseRequest:
      type: object
      properties:
        client_id:
          type: integer
        case_number:
          type: string
        internal_number:
          type: string
        case_type:
          type: string
          enum: [civil, criminal, labor, family, tax, administrative, other]
        court:
          type: string
        court_instance:
          type: string
        status:
          type: string
          enum: [active, closed, archived, suspended]
        priority:
          type: string
          enum: [low, medium, high, urgent]
        responsible_lawyer_id:
          type: integer
        team_members:
          type: array
          items:
            type: integer
        filed_at:
          type: string
          format: date-time
        closed_at:
          type: string
          format: date-time
        parties:
          $ref: '#/components/schemas/Parties'
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        case_value:
          type: number
        custom_fields:
          type: object

    CreateDeadlineRequest:
      type: object
      required:
        - case_id
        - responsible_id
        - title
        - deadline_date
      properties:
        case_id:
          type: integer
        responsible_id:
          type: integer
        title:
          type: string
        description:
          type: string
        deadline_date:
          type: string
          format: date-time
        internal_deadline_date:
          type: string
          format: date-time
        is_fatal:
          type: boolean
          default: false
        alert_config:
          type: object

    UpdateDeadlineRequest:
      type: object
      properties:
        responsible_id:
          type: integer
        title:
          type: string
        description:
          type: string
        deadline_date:
          type: string
          format: date-time
        internal_deadline_date:
          type: string
          format: date-time
        is_fatal:
          type: boolean
        status:
          type: string
          enum: [pending, completed, expired, cancelled]
        alert_config:
          type: object

    UpdateDocumentRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        document_type:
          type: string
          enum:
            [
              petition,
              contract,
              evidence,
              judgment,
              appeal,
              power_of_attorney,
              agreement,
              report,
              other,
            ]
        access_level:
          type: string
          enum: [tenant, case_team, owner_only]
        tags:
          type: array
          items:
            type: string

    CreateCaseEventRequest:
      type: object
      required:
        - case_id
        - event_type
        - title
        - event_date
      properties:
        case_id:
          type: integer
        event_type:
          type: string
          enum:
            [filing, hearing, decision, publication, appeal, motion, settlement, judgment, other]
        title:
          type: string
        description:
          type: string
        event_date:
          type: string
          format: date-time
        source:
          type: string
          enum: [manual, court_api, email, import]
          default: manual
        metadata:
          type: object

    UpdateCaseEventRequest:
      type: object
      properties:
        event_type:
          type: string
          enum:
            [filing, hearing, decision, publication, appeal, motion, settlement, judgment, other]
        title:
          type: string
        description:
          type: string
        event_date:
          type: string
          format: date-time
        metadata:
          type: object

security:
  - bearerAuth: []
